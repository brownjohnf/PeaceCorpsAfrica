:plain
  <!--Load the AJAX API-->
  <script type="text/javascript" src="https://www.google.com/jsapi"></script>
:javascript
  // Load the Visualization API and the piechart package.
  google.load('visualization', '1.0', {'packages':['geochart']});

  // Set a callback to run when the Google Visualization API is loaded.
  google.setOnLoadCallback(drawChart);

  // Callback that creates and populates a data table, instantiates the pie chart, 
  // passes in the data and draws it.
  function drawChart() {
  
    // pull the json data from the app/source
    var jsonGeoData  = $.ajax({
      url:'/countries.json',
      dataType:'json',
      async:false
      }).responseText;

    // set the options
    var geoOptions = {
      'backgroundColor': { fill: 'white', stroke: '#666', strokeWidth: 0 },
      'region': '002',
      // colors are $blue, $green, $orange, $red
      'colorAxis': {minValue: 0, maxValue: 3, colors: ['#049cdb', '#46a546', '#f89406', '#9d261d']},
      //'colorAxis': {minValue: 2011, maxValue: 2012, values: [2011,2012], colors: ['#FF0000', '#00FF00']},
      'datalessRegionColor': '#f5f5f5',
      'height': 'auto',
      'keepAspectRatio': true,
      'legend': 'none',//{numberFormat: '', textStyle: {color:'black'}},
      'resolution': 'countries',
      'width': '100%',
      'tooltip': {color: 'black'}
    };

    // load the json data source into a datatable for the chart
    var geoData = new google.visualization.DataTable(jsonGeoData);

    // set the chart target div
    var geo_chart = new google.visualization.GeoChart(document.getElementById('chart_div_geo'));

    // Every time the geo chart fires the "regionClick" event, it should call our
    // selectHandler() function.
    google.visualization.events.addListener(geo_chart, 'regionClick', selectHandler);
  
    geo_chart.draw(geoData, geoOptions);
    function selectHandler(e) {
      var countries = {};
      countries.sn = '1';
      //alert(countries[e.region.toLowerCase()]);
      if (countries[e.region.toLowerCase()]) {
        window.location = '/countries/' + countries[e.region.toLowerCase()];
      }
    }
  }

.container-fluid
  .row-fluid
    .span3
      .well.green
        %h1 Where to?
        %p We work in #{pluralize(Country.count, 'country')} across Africa.
      - for country in @countries do
        = link_to country do
          .well.orange.center
            %h2= country.name
    .span9
      #chart_div_geo
